<?xml version="1.0" encoding="utf-8"?>

<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2">

  <sql-query name="DropAllDbs">
    <![CDATA[
USE [master]

IF  EXISTS (SELECT name FROM sys.databases WHERE name = N'bkcol')
	BEGIN
	ALTER DATABASE [bkcol] SET SINGLE_USER WITH ROLLBACK IMMEDIATE
	DROP DATABASE [bkcol]
	END

IF  EXISTS (SELECT name FROM sys.databases WHERE name = N'courtis')
	BEGIN
	ALTER DATABASE [courtis] SET SINGLE_USER WITH ROLLBACK IMMEDIATE
	DROP DATABASE [courtis]
	END

IF  EXISTS (SELECT name FROM sys.databases WHERE name = N'noc')
	BEGIN
	ALTER DATABASE [noc] SET SINGLE_USER WITH ROLLBACK IMMEDIATE
	DROP DATABASE [noc]
	END

IF  EXISTS (SELECT name FROM sys.databases WHERE name = N'probe')
	BEGIN
	ALTER DATABASE [probe] SET SINGLE_USER WITH ROLLBACK IMMEDIATE
	DROP DATABASE [probe]
	END


IF  EXISTS (SELECT name FROM sys.databases WHERE name = N'ZenTestDB')
	BEGIN
	ALTER DATABASE [ZenTestDB] SET SINGLE_USER WITH ROLLBACK IMMEDIATE
	DROP DATABASE [ZenTestDB]
	END
      ]]>
  </sql-query>
  
  <sql-query name="DropAndRecreateAllDbs">
    <![CDATA[
USE [master]

declare @dbs table(name nvarchar(50))
insert into @dbs(name)
    select 'bkcol'		union
    select 'courtis'	union
    select 'noc'		union
    select 'probe'		union
    select 'ZenTestDB'


DECLARE @data_path nvarchar(256);
SET @data_path = (SELECT SUBSTRING(physical_name, 1, CHARINDEX(N'master.mdf', LOWER(physical_name)) - 1)
                  FROM master.sys.master_files
                  WHERE database_id = 1 AND file_id = 1);

DECLARE @db_name nvarchar(50) 
DECLARE DB_CURSOR CURSOR 
  LOCAL STATIC READ_ONLY FORWARD_ONLY
FOR 
SELECT name from @dbs 

OPEN DB_CURSOR
FETCH NEXT FROM DB_CURSOR INTO @db_name
WHILE @@FETCH_STATUS = 0
BEGIN 
		IF  EXISTS (SELECT name FROM sys.databases WHERE name = @db_name)
			BEGIN
			EXECUTE('ALTER DATABASE ['+@db_name+'] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
			DROP DATABASE ['+@db_name+'];')
			END
		EXECUTE ('CREATE DATABASE ['+@db_name+']'+'
		ON PRIMARY 
			( NAME = '+@db_name+'
			, FILENAME = ''' +@data_path+@db_name+'_data.mdf''
			, SIZE = 3072KB, MAXSIZE = 50MB, FILEGROWTH = 15% )
		LOG ON
			( NAME = '+@db_name+'_log
			, FILENAME = ''' +@data_path+@db_name+'_log.ldf''
			, SIZE = 1024KB, MAXSIZE = 25MB, FILEGROWTH = 10% )'
		);
	PRINT 'Created ['+@db_name+']'
	FETCH NEXT FROM DB_CURSOR INTO @db_name
END
CLOSE DB_CURSOR
DEALLOCATE DB_CURSOR

      ]]>
  </sql-query>

</hibernate-mapping>